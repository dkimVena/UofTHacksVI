{"ast":null,"code":"import _regeneratorRuntime from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/components/Auth/Register.js\";\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nimport { Link } from 'react-router-dom';\nimport { Grid, Form, Segment, Button, Header, Message, Icon } from 'semantic-ui-react';\nimport firebase from 'lib/firebase';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      errors: [],\n      loading: false,\n      usersRef: firebase.database().ref('users')\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.displayErrors = function (errors) {\n      return errors.map(function (error, i) {\n        return React.createElement(\"p\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, error.message);\n      });\n    };\n\n    _this.isFormEmpty = function (_ref) {\n      var username = _ref.username,\n          email = _ref.email,\n          password = _ref.password,\n          passwordConfirmation = _ref.passwordConfirmation;\n      return !username.length || !email.length || !password.length || !passwordConfirmation.length;\n    };\n\n    _this.isPasswordValid = function (_ref2) {\n      var password = _ref2.password,\n          passwordConfirmation = _ref2.passwordConfirmation;\n      var result = true;\n      if (password.length < 6) result = false;else if (password !== passwordConfirmation) result = false;\n      return result;\n    };\n\n    _this.isFormValid = function () {\n      var errors = [];\n      var error;\n      var result = true;\n\n      if (_this.isFormEmpty(_this.state)) {\n        error = {\n          message: 'Fill in all fields'\n        };\n\n        _this.setState({\n          errors: errors.concat(error)\n        });\n\n        result = false;\n      } else if (!_this.isPasswordValid(_this.state)) {\n        error = {\n          message: 'Password is invalid'\n        };\n\n        _this.setState({\n          errors: errors.concat(error)\n        });\n\n        result = false;\n      }\n\n      return result;\n    };\n\n    _this.handleInputError = function (errors, inputName) {\n      return errors.some(function (err) {\n        return err.message.toLowerCase().includes(inputName);\n      }) ? 'error' : '';\n    };\n\n    _this.saveUser = function (createdUser) {\n      return _this.state.usersRef.child(createdUser.user.uid).set({\n        name: createdUser.user.displayName,\n        avatar: createdUser.user.photoURL\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var createdUser;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  errors: [],\n                  loading: true\n                });\n\n                if (!_this.isFormValid()) {\n                  _context.next = 34;\n                  break;\n                }\n\n                _context.prev = 3;\n                _context.next = 6;\n                return firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password);\n\n              case 6:\n                createdUser = _context.sent;\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n\n                _this.setState({\n                  errors: _this.state.errors.concat(_context.t0),\n                  loading: false\n                });\n\n              case 13:\n                _context.prev = 13;\n                console.log(createdUser);\n                _context.next = 17;\n                return createdUser.user.updateProfile({\n                  displayName: _this.state.username,\n                  photoURL: \"http://gravatar.com/avatar/\".concat(md5(createdUser.user.email), \"?d=identicon\")\n                });\n\n              case 17:\n                _context.prev = 17;\n                _context.next = 20;\n                return _this.saveUser(createdUser);\n\n              case 20:\n                console.log('user saved');\n\n                _this.setState({\n                  loading: false\n                });\n\n                _context.next = 28;\n                break;\n\n              case 24:\n                _context.prev = 24;\n                _context.t1 = _context[\"catch\"](17);\n                console.log(_context.t1);\n\n                _this.setState({\n                  errors: _this.state.errors.concat(_context.t1),\n                  loading: false\n                });\n\n              case 28:\n                _context.next = 34;\n                break;\n\n              case 30:\n                _context.prev = 30;\n                _context.t2 = _context[\"catch\"](13);\n                console.log(_context.t2);\n\n                _this.setState({\n                  errors: _this.state.errors.concat(_context.t2),\n                  loading: false\n                });\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 9], [13, 30], [17, 24]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          password = _this$state.password,\n          passwordConfirmation = _this$state.passwordConfirmation,\n          errors = _this$state.errors,\n          loading = _this$state.loading;\n      return React.createElement(Grid, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        icon: true,\n        color: \"black\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"smile outline\",\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), \"Register for CoreTex\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        name: \"username\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Username\",\n        onChange: this.handleChange,\n        value: username,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"email\",\n        className: this.handleInputError(errors, 'email'),\n        icon: \"mail\",\n        iconPosition: \"left\",\n        placeholder: \"Email Address\",\n        onChange: this.handleChange,\n        value: email,\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"password\",\n        className: this.handleInputError(errors, 'password'),\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        onChange: this.handleChange,\n        value: password,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"passwordConfirmation\",\n        className: this.handleInputError(errors, 'password'),\n        icon: \"repeat\",\n        iconPosition: \"left\",\n        placeholder: \"Password Confirmation\",\n        onChange: this.handleChange,\n        value: passwordConfirmation,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Button, {\n        disabled: loading,\n        className: loading ? 'loading' : '',\n        fluid: true,\n        color: \"black\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Register\"))), errors.length > 0 && React.createElement(Message, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Errors\"), this.displayErrors(errors)), React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Already a user? \", React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Login\"))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/components/Auth/Register.js"],"names":["React","Component","md5","Link","Grid","Form","Segment","Button","Header","Message","Icon","firebase","Register","state","username","email","password","passwordConfirmation","errors","loading","usersRef","database","ref","handleChange","e","setState","target","name","value","displayErrors","map","error","i","message","isFormEmpty","length","isPasswordValid","result","isFormValid","concat","handleInputError","inputName","some","err","toLowerCase","includes","saveUser","createdUser","child","user","uid","set","displayName","avatar","photoURL","handleSubmit","preventDefault","auth","createUserWithEmailAndPassword","console","log","updateProfile","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport md5 from 'md5';\nimport { Link } from 'react-router-dom';\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from 'semantic-ui-react';\nimport firebase from 'lib/firebase';\n\nclass Register extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref('users')\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    let result = true;\n    if (password.length < 6) result = false;\n    else if (password !== passwordConfirmation) result = false;\n    return result;\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n    let result = true;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: 'Fill in all fields' };\n      this.setState({ errors: errors.concat(error) });\n      result = false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: 'Password is invalid' };\n      this.setState({ errors: errors.concat(error) });\n      result = false;\n    }\n    return result;\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(err => err.message.toLowerCase().includes(inputName))\n      ? 'error'\n      : '';\n  };\n\n  saveUser = createdUser => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n  handleSubmit = async e => {\n    e.preventDefault();\n    this.setState({ errors: [], loading: true });\n\n    if (this.isFormValid()) {\n      let createdUser;\n      try {\n        createdUser = await firebase\n          .auth()\n          .createUserWithEmailAndPassword(\n            this.state.email,\n            this.state.password\n          );\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          errors: this.state.errors.concat(error),\n          loading: false\n        });\n      }\n\n      try {\n        console.log(createdUser);\n        await createdUser.user.updateProfile({\n          displayName: this.state.username,\n          photoURL: `http://gravatar.com/avatar/${md5(\n            createdUser.user.email\n          )}?d=identicon`\n        });\n        try {\n          await this.saveUser(createdUser);\n          console.log('user saved');\n          this.setState({ loading: false });\n        } catch (error) {\n          console.log(error);\n          this.setState({\n            errors: this.state.errors.concat(error),\n            loading: false\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          errors: this.state.errors.concat(error),\n          loading: false\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" icon color=\"black\" textAlign=\"center\">\n            <Icon name=\"smile outline\" color=\"black\" />\n            Register for CoreTex\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n                value={username}\n                type=\"text\"\n              />\n              <Form.Input\n                fluid\n                name=\"email\"\n                className={this.handleInputError(errors, 'email')}\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                type=\"email\"\n              />\n              <Form.Input\n                fluid\n                name=\"password\"\n                className={this.handleInputError(errors, 'password')}\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                type=\"password\"\n              />\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                className={this.handleInputError(errors, 'password')}\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                type=\"password\"\n              />\n              <Button\n                disabled={loading}\n                className={loading ? 'loading' : ''}\n                fluid\n                color=\"black\"\n                size=\"large\"\n              >\n                Register\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Errors</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Already a user? <Link to=\"/login\">Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}