{"ast":null,"code":"import _classCallCheck from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/components/FundModal/FundModal.js\";\nimport React, { Component } from 'react';\nimport mime from 'mime-types';\nimport { Modal, Input, Button, Icon, Form } from 'semantic-ui-react';\n\nvar FundModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FundModal, _Component);\n\n  function FundModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FundModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FundModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.sendMoneyRequest = function () {\n      var file = _this.state.file;\n      var _this$props = _this.props,\n          uploadFile = _this$props.uploadFile,\n          closeModal = _this$props.closeModal;\n\n      if (file && _this.isAuthorized(file.name)) {\n        var metaData = {\n          contentType: mime.lookup(file.name)\n        };\n        uploadFile(file, metaData);\n        closeModal();\n\n        _this.clearFile();\n      }\n    };\n\n    _this.clearFile = function () {\n      _this.setState({\n        file: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FundModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          modal = _this$props2.modal,\n          closeModal = _this$props2.closeModal;\n      return React.createElement(Modal, {\n        basic: true,\n        open: modal,\n        onClose: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Add a channel\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Input, {\n        fluid: true,\n        label: \"Name of Channel\",\n        name: \"channelName\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Input, {\n        fluid: true,\n        label: \"About the Channel\",\n        name: \"channelDetail\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"green\",\n        inverted: true,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), \" Add\"), React.createElement(Button, {\n        color: \"red\",\n        inverted: true,\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), \" Cancel\")));\n    }\n  }]);\n\n  return FundModal;\n}(Component);\n\nexport default FundModal;","map":{"version":3,"sources":["/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/components/FundModal/FundModal.js"],"names":["React","Component","mime","Modal","Input","Button","Icon","Form","FundModal","sendMoneyRequest","file","state","props","uploadFile","closeModal","isAuthorized","name","metaData","contentType","lookup","clearFile","setState","modal","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport mime from 'mime-types';\nimport { Modal, Input, Button, Icon, Form } from 'semantic-ui-react';\n\nclass FundModal extends Component {\n  sendMoneyRequest = () => {\n    const { file } = this.state;\n    const { uploadFile, closeModal } = this.props;\n\n    if (file && this.isAuthorized(file.name)) {\n      const metaData = { contentType: mime.lookup(file.name) };\n      uploadFile(file, metaData);\n      closeModal();\n      this.clearFile();\n    }\n  };\n\n  clearFile = () => {\n    this.setState({ file: null });\n  };\n\n  render() {\n    const { modal, closeModal } = this.props;\n    return (\n      <Modal basic open={modal} onClose={this.closeModal}>\n        <Modal.Header>Add a channel</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Field>\n              <Input\n                fluid\n                label=\"Name of Channel\"\n                name=\"channelName\"\n                onChange={this.handleChange}\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <Input\n                fluid\n                label=\"About the Channel\"\n                name=\"channelDetail\"\n                onChange={this.handleChange}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"green\" inverted onClick={this.handleSubmit}>\n            <Icon name=\"checkmark\" /> Add\n          </Button>\n          <Button color=\"red\" inverted onClick={this.closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default FundModal;\n"]},"metadata":{},"sourceType":"module"}