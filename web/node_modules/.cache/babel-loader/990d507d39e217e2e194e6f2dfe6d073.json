{"ast":null,"code":"import _classCallCheck from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/components/Progress/Progress.js\";\nimport React, { Component } from 'react';\nimport firebase from 'lib/firebase';\nimport { Chart } from 'react-charts';\n\nvar Progress =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Progress, _Component);\n\n  function Progress() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Progress)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      usersRef: firebase.database().ref('users'),\n      loadedDates: []\n    };\n\n    _this.addListeners = function (currentUserId) {\n      var loadedDates = [];\n      console.log(currentUserId);\n\n      _this.state.usersRef.child(currentUserId).child('dates').on('child_added', function (snap) {\n        loadedDates.push(snap.val());\n        console.log(loadedDates); // let result = loadedDates.map(item => (\n        //   if (true)\n        //    item.correct / item.total / item.time;\n        // ));\n        // this.setState({ messages: loadedMessages, messagesLoading: false });\n        // this.countUniqueUsers(loadedMessages);\n        // this.countUserPosts(loadedMessages);\n\n        _this.setChartData(loadedDates);\n      }); // this.setState({ loadedDates: result });\n\n    };\n\n    _this.getSum = function (total, num) {\n      return total + num;\n    };\n\n    _this.setChartData = function (loadedData) {\n      var result = loadedData.map(function (item) {\n        var sumTime = item.times.reduce(_this.getSum);\n        var avgTime = Math.round(sumTime / item.times.length);\n        var score = item.correct / item.total / avgTime * 100;\n        return [new Date(item.date).toLocaleDateString(), score];\n      });\n\n      _this.setState({\n        loadedDates: result\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentUser = this.props.currentUser;\n\n      if (currentUser) {\n        this.addListeners(currentUser.uid);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loadedDates = this.state.loadedDates;\n      return React.createElement(Chart, {\n        style: {\n          width: '400px',\n          height: '300px'\n        },\n        data: [{\n          label: 'Progress',\n          data: loadedDates\n        }],\n        axes: [{\n          primary: true,\n          type: 'linear',\n          position: 'bottom'\n        }, {\n          type: 'linear',\n          position: 'left'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Progress;\n}(Component);\n\nexport default Progress;","map":{"version":3,"sources":["/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/components/Progress/Progress.js"],"names":["React","Component","firebase","Chart","Progress","state","usersRef","database","ref","loadedDates","addListeners","currentUserId","console","log","child","on","snap","push","val","setChartData","getSum","total","num","loadedData","result","map","item","sumTime","times","reduce","avgTime","Math","round","length","score","correct","Date","date","toLocaleDateString","setState","currentUser","props","uid","width","height","label","data","primary","type","position"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,KAAT,QAAsB,cAAtB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,QAAQ,EAAEJ,QAAQ,CAACK,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAZ;AAA8CC,MAAAA,WAAW,EAAE;AAA3D,K;;UAURC,Y,GAAe,UAAAC,aAAa,EAAI;AAC9B,UAAIF,WAAW,GAAG,EAAlB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;;AACA,YAAKN,KAAL,CAAWC,QAAX,CACGQ,KADH,CACSH,aADT,EAEGG,KAFH,CAES,OAFT,EAGGC,EAHH,CAGM,aAHN,EAGqB,UAAAC,IAAI,EAAI;AACzBP,QAAAA,WAAW,CAACQ,IAAZ,CAAiBD,IAAI,CAACE,GAAL,EAAjB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAFyB,CAIzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,cAAKU,YAAL,CAAkBV,WAAlB;AACD,OAfH,EAH8B,CAoB9B;;AACD,K;;UAEDW,M,GAAS,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACvB,aAAOD,KAAK,GAAGC,GAAf;AACD,K;;UAEDH,Y,GAAe,UAAAI,UAAU,EAAI;AAC3B,UAAIC,MAAM,GAAGD,UAAU,CAACE,GAAX,CAAe,UAAAC,IAAI,EAAI;AAClC,YAAIC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,MAAX,CAAkB,MAAKT,MAAvB,CAAd;AACA,YAAIU,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWK,MAAhC,CAAd;AAEA,YAAIC,KAAK,GAAIR,IAAI,CAACS,OAAL,GAAeT,IAAI,CAACL,KAApB,GAA4BS,OAA7B,GAAwC,GAApD;AACA,eAAO,CAAC,IAAIM,IAAJ,CAASV,IAAI,CAACW,IAAd,EAAoBC,kBAApB,EAAD,EAA2CJ,KAA3C,CAAP;AACD,OANY,CAAb;;AAOA,YAAKK,QAAL,CAAc;AAAE9B,QAAAA,WAAW,EAAEe;AAAf,OAAd;AACD,K;;;;;;;wCA5CmB;AAAA,UACVgB,WADU,GACM,KAAKC,KADX,CACVD,WADU;;AAGlB,UAAIA,WAAJ,EAAiB;AACf,aAAK9B,YAAL,CAAkB8B,WAAW,CAACE,GAA9B;AACD;AACF;;;6BAwCQ;AAAA,UACCjC,WADD,GACiB,KAAKJ,KADtB,CACCI,WADD;AAEP,aACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE;AACLkC,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SADT;AAKE,QAAA,IAAI,EAAE,CACJ;AACEC,UAAAA,KAAK,EAAE,UADT;AAEEC,UAAAA,IAAI,EAAErC;AAFR,SADI,CALR;AAWE,QAAA,IAAI,EAAE,CACJ;AAAEsC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAE,QAAvB;AAAiCC,UAAAA,QAAQ,EAAE;AAA3C,SADI,EAEJ;AAAED,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAFI,CAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAkBD;;;;EArEoBhD,S;;AAwEvB,eAAeG,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport firebase from 'lib/firebase';\nimport { Chart } from 'react-charts';\n\nclass Progress extends Component {\n  state = { usersRef: firebase.database().ref('users'), loadedDates: [] };\n\n  componentDidMount() {\n    const { currentUser } = this.props;\n\n    if (currentUser) {\n      this.addListeners(currentUser.uid);\n    }\n  }\n\n  addListeners = currentUserId => {\n    let loadedDates = [];\n    console.log(currentUserId);\n    this.state.usersRef\n      .child(currentUserId)\n      .child('dates')\n      .on('child_added', snap => {\n        loadedDates.push(snap.val());\n        console.log(loadedDates);\n\n        // let result = loadedDates.map(item => (\n        //   if (true)\n        //    item.correct / item.total / item.time;\n        // ));\n        // this.setState({ messages: loadedMessages, messagesLoading: false });\n        // this.countUniqueUsers(loadedMessages);\n        // this.countUserPosts(loadedMessages);\n        this.setChartData(loadedDates);\n      });\n\n    // this.setState({ loadedDates: result });\n  };\n\n  getSum = (total, num) => {\n    return total + num;\n  };\n\n  setChartData = loadedData => {\n    let result = loadedData.map(item => {\n      let sumTime = item.times.reduce(this.getSum);\n      let avgTime = Math.round(sumTime / item.times.length);\n\n      let score = (item.correct / item.total / avgTime) * 100;\n      return [new Date(item.date).toLocaleDateString(), score];\n    });\n    this.setState({ loadedDates: result });\n  };\n\n  render() {\n    const { loadedDates } = this.state;\n    return (\n      <Chart\n        style={{\n          width: '400px',\n          height: '300px'\n        }}\n        data={[\n          {\n            label: 'Progress',\n            data: loadedDates\n          }\n        ]}\n        axes={[\n          { primary: true, type: 'linear', position: 'bottom' },\n          { type: 'linear', position: 'left' }\n        ]}\n      />\n    );\n  }\n}\n\nexport default Progress;\n"]},"metadata":{},"sourceType":"module"}