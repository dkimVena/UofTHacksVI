{"ast":null,"code":"import _defineProperty from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { applyPenders } from 'lib/common';\nvar SET_CURRENT_CHANNEL = 'channel/SET_CURRENT_CHANNEL';\nvar SET_PRIVATE_CHANNEL = 'channel/SET_PRIVATE_CHANNEL';\nvar SET_USER_POSTS = 'channel/SET_USER_POSTS';\nexport var set_current_channel = createAction(SET_CURRENT_CHANNEL);\nexport var set_private_channel = createAction(SET_PRIVATE_CHANNEL);\nexport var set_user_posts = createAction(SET_USER_POSTS);\nvar initialState = {\n  currentChannel: null,\n  isPrivateChannel: false,\n  loading: true,\n  userPosts: null\n};\nvar reducer = handleActions((_handleActions = {}, _defineProperty(_handleActions, SET_CURRENT_CHANNEL, function (state, _ref) {\n  var payload = _ref.payload;\n  return produce(state, function (draft) {\n    draft.currentChannel = payload;\n    draft.loading = false;\n  });\n}), _defineProperty(_handleActions, SET_PRIVATE_CHANNEL, function (state, _ref2) {\n  var payload = _ref2.payload;\n  return produce(state, function (draft) {\n    draft.isPrivateChannel = payload;\n  });\n}), _defineProperty(_handleActions, SET_USER_POSTS, function (state, _ref3) {\n  var payload = _ref3.payload;\n  return produce(state, function (draft) {\n    draft.userPosts = payload;\n  });\n}), _handleActions), initialState);\nexport default applyPenders(reducer, [{// type: FETCH_USER,\n  // onSuccess: (state, { payload: { data } }) => {\n  //   return produce(state, draft => {\n  //     draft.userData = data;\n  //   });\n  // }\n}]);","map":{"version":3,"sources":["/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/store/modules/channel.js"],"names":["createAction","handleActions","produce","applyPenders","SET_CURRENT_CHANNEL","SET_PRIVATE_CHANNEL","SET_USER_POSTS","set_current_channel","set_private_channel","set_user_posts","initialState","currentChannel","isPrivateChannel","loading","userPosts","reducer","state","payload","draft"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,mBAAmB,GAAG,6BAA5B;AACA,IAAMC,mBAAmB,GAAG,6BAA5B;AACA,IAAMC,cAAc,GAAG,wBAAvB;AAEA,OAAO,IAAMC,mBAAmB,GAAGP,YAAY,CAACI,mBAAD,CAAxC;AACP,OAAO,IAAMI,mBAAmB,GAAGR,YAAY,CAACK,mBAAD,CAAxC;AACP,OAAO,IAAMI,cAAc,GAAGT,YAAY,CAACM,cAAD,CAAnC;AAEP,IAAMI,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,IADG;AAEnBC,EAAAA,gBAAgB,EAAE,KAFC;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,IAAMC,OAAO,GAAGd,aAAa,uDAExBG,mBAFwB,EAEF,UAACY,KAAD,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC7C,SAAOf,OAAO,CAACc,KAAD,EAAQ,UAAAE,KAAK,EAAI;AAC7BA,IAAAA,KAAK,CAACP,cAAN,GAAuBM,OAAvB;AACAC,IAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACD,GAHa,CAAd;AAID,CAPwB,mCAQxBR,mBARwB,EAQF,UAACW,KAAD,SAAwB;AAAA,MAAdC,OAAc,SAAdA,OAAc;AAC7C,SAAOf,OAAO,CAACc,KAAD,EAAQ,UAAAE,KAAK,EAAI;AAC7BA,IAAAA,KAAK,CAACN,gBAAN,GAAyBK,OAAzB;AACD,GAFa,CAAd;AAGD,CAZwB,mCAaxBX,cAbwB,EAaP,UAACU,KAAD,SAAwB;AAAA,MAAdC,OAAc,SAAdA,OAAc;AACxC,SAAOf,OAAO,CAACc,KAAD,EAAQ,UAAAE,KAAK,EAAI;AAC7BA,IAAAA,KAAK,CAACJ,SAAN,GAAkBG,OAAlB;AACD,GAFa,CAAd;AAGD,CAjBwB,oBAmB3BP,YAnB2B,CAA7B;AAsBA,eAAeP,YAAY,CAACY,OAAD,EAAU,CACnC,CACE;AACA;AACA;AACA;AACA;AACA;AANF,CADmC,CAAV,CAA3B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { applyPenders } from 'lib/common';\n\nconst SET_CURRENT_CHANNEL = 'channel/SET_CURRENT_CHANNEL';\nconst SET_PRIVATE_CHANNEL = 'channel/SET_PRIVATE_CHANNEL';\nconst SET_USER_POSTS = 'channel/SET_USER_POSTS';\n\nexport const set_current_channel = createAction(SET_CURRENT_CHANNEL);\nexport const set_private_channel = createAction(SET_PRIVATE_CHANNEL);\nexport const set_user_posts = createAction(SET_USER_POSTS);\n\nconst initialState = {\n  currentChannel: null,\n  isPrivateChannel: false,\n  loading: true,\n  userPosts: null\n};\n\nconst reducer = handleActions(\n  {\n    [SET_CURRENT_CHANNEL]: (state, { payload }) => {\n      return produce(state, draft => {\n        draft.currentChannel = payload;\n        draft.loading = false;\n      });\n    },\n    [SET_PRIVATE_CHANNEL]: (state, { payload }) => {\n      return produce(state, draft => {\n        draft.isPrivateChannel = payload;\n      });\n    },\n    [SET_USER_POSTS]: (state, { payload }) => {\n      return produce(state, draft => {\n        draft.userPosts = payload;\n      });\n    }\n  },\n  initialState\n);\n\nexport default applyPenders(reducer, [\n  {\n    // type: FETCH_USER,\n    // onSuccess: (state, { payload: { data } }) => {\n    //   return produce(state, draft => {\n    //     draft.userData = data;\n    //   });\n    // }\n  }\n]);\n"]},"metadata":{},"sourceType":"module"}