{"ast":null,"code":"import _classCallCheck from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/components/Progress/Progress.js\";\nimport React, { Component } from 'react';\nimport firebase from 'lib/firebase';\nimport { Chart } from 'react-charts';\nimport { Line } from 'react-chartjs-2';\n\nvar Progress =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Progress, _Component);\n\n  function Progress() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Progress)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      usersRef: firebase.database().ref('users'),\n      loadedDates: [],\n      loadedLabels: [],\n      loading: true\n    };\n\n    _this.addListeners = function (currentUserId) {\n      var loadedDates = [];\n      console.log(currentUserId);\n\n      _this.state.usersRef.child(currentUserId).child('facialExpressionProgress').on('child_added', function (snap) {\n        loadedDates.push(snap.val());\n        console.log(loadedDates); // let result = loadedDates.map(item => (\n        //   if (true)\n        //    item.correct / item.total / item.time;\n        // ));\n        // this.setState({ messages: loadedMessages, messagesLoading: false });\n        // this.countUniqueUsers(loadedMessages);\n        // this.countUserPosts(loadedMessages);\n\n        _this.setChartData(loadedDates);\n      }); // this.setState({ loadedDates: result });\n\n    };\n\n    _this.getSum = function (total, num) {\n      return total + num;\n    };\n\n    _this.setChartData = function (loadedData) {\n      var resultLabels = loadedData.map(function (item) {\n        return new Date(item.date).toLocaleDateString();\n      });\n      var resultData = loadedData.map(function (item) {\n        var sumTime = item.times.reduce(_this.getSum);\n        var avgTime = Math.round(sumTime / item.times.length);\n        var score = item.correct / item.total / avgTime * 100;\n        return score;\n      });\n\n      _this.setState({\n        loadedDates: resultData,\n        loadedLabels: resultLabels,\n        loading: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentUser = this.props.currentUser;\n\n      if (currentUser) {\n        this.addListeners(currentUser.uid);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loadedDates = _this$state.loadedDates,\n          loadedLabels = _this$state.loadedLabels,\n          loading = _this$state.loading;\n      var data = {\n        labels: loadedLabels,\n        datasets: [{\n          label: 'Progress',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: loadedDates\n        }]\n      };\n      console.log(loadedDates);\n      return !loading && React.createElement(Line, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Progress;\n}(Component);\n\nexport default Progress;","map":{"version":3,"sources":["/Users/TED/David/gook/UofTHacksVI/uoft-hacks-vi/web/src/components/Progress/Progress.js"],"names":["React","Component","firebase","Chart","Line","Progress","state","usersRef","database","ref","loadedDates","loadedLabels","loading","addListeners","currentUserId","console","log","child","on","snap","push","val","setChartData","getSum","total","num","loadedData","resultLabels","map","item","Date","date","toLocaleDateString","resultData","sumTime","times","reduce","avgTime","Math","round","length","score","correct","setState","currentUser","props","uid","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport firebase from 'lib/firebase';\nimport { Chart } from 'react-charts';\nimport { Line } from 'react-chartjs-2';\n\nclass Progress extends Component {\n  state = {\n    usersRef: firebase.database().ref('users'),\n    loadedDates: [],\n    loadedLabels: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    const { currentUser } = this.props;\n\n    if (currentUser) {\n      this.addListeners(currentUser.uid);\n    }\n  }\n\n  addListeners = currentUserId => {\n    let loadedDates = [];\n    console.log(currentUserId);\n    this.state.usersRef\n      .child(currentUserId)\n      .child('facialExpressionProgress')\n      .on('child_added', snap => {\n        loadedDates.push(snap.val());\n        console.log(loadedDates);\n\n        // let result = loadedDates.map(item => (\n        //   if (true)\n        //    item.correct / item.total / item.time;\n        // ));\n        // this.setState({ messages: loadedMessages, messagesLoading: false });\n        // this.countUniqueUsers(loadedMessages);\n        // this.countUserPosts(loadedMessages);\n        this.setChartData(loadedDates);\n      });\n\n    // this.setState({ loadedDates: result });\n  };\n\n  getSum = (total, num) => {\n    return total + num;\n  };\n\n  setChartData = loadedData => {\n    let resultLabels = loadedData.map(item => {\n      return new Date(item.date).toLocaleDateString();\n    });\n\n    let resultData = loadedData.map(item => {\n      let sumTime = item.times.reduce(this.getSum);\n      let avgTime = Math.round(sumTime / item.times.length);\n\n      let score = (item.correct / item.total / avgTime) * 100;\n      return score;\n    });\n    this.setState({\n      loadedDates: resultData,\n      loadedLabels: resultLabels,\n      loading: false\n    });\n  };\n\n  render() {\n    const { loadedDates, loadedLabels, loading } = this.state;\n\n    const data = {\n      labels: loadedLabels,\n      datasets: [\n        {\n          label: 'Progress',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: loadedDates\n        }\n      ]\n    };\n\n    console.log(loadedDates);\n    return !loading && <Line data={data} />;\n  }\n}\n\nexport default Progress;\n"]},"metadata":{},"sourceType":"module"}